{"Functions.html#/c:@F@IGListDiff":{"name":"IGListDiff","abstract":"<p>Creates a diff using indexes between two collections.</p>"},"Functions.html#/c:@F@IGListDiffPaths":{"name":"IGListDiffPaths","abstract":"<p>Creates a diff using index paths between two collections.</p>"},"Functions.html#/c:IGListExperiments.h@F@IGListExperimentEnabled":{"name":"IGListExperimentEnabled","abstract":"<p>Check if an experiment is enabled in a bitmask.</p>"},"Functions.html#/c:@F@IGListDiffExperiment":{"name":"IGListDiffExperiment","abstract":"<p>Performs an index diff with an experiment bitmask.</p>"},"Functions.html#/c:@F@IGListDiffPathsExperiment":{"name":"IGListDiffPathsExperiment","abstract":"<p>Performs a index path diff with an experiment bitmask.</p>"},"Type Definitions.html#/c:IGListAdapter.h@T@IGListUpdaterCompletion":{"name":"IGListUpdaterCompletion","abstract":"<p>A block to execute when the list updates are completed.</p>"},"Type Definitions.html#/c:IGListSingleSectionController.h@T@IGListSingleSectionCellConfigureBlock":{"name":"IGListSingleSectionCellConfigureBlock","abstract":"<p>A block used to configure cells.</p>"},"Type Definitions.html#/c:IGListSingleSectionController.h@T@IGListSingleSectionCellSizeBlock":{"name":"IGListSingleSectionCellSizeBlock","abstract":"<p>A block that returns the size for the cell given the collection context.</p>"},"Type Definitions.html#/c:IGListUpdatingDelegate.h@T@IGListUpdatingCompletion":{"name":"IGListUpdatingCompletion","abstract":"<p>A completion block to execute when updates are finished.</p>"},"Type Definitions.html#/c:IGListUpdatingDelegate.h@T@IGListObjectTransitionBlock":{"name":"IGListObjectTransitionBlock","abstract":"<p>A block to be called when the adapter applies changes to the collection view.</p>"},"Type Definitions.html#/c:IGListUpdatingDelegate.h@T@IGListItemUpdateBlock":{"name":"IGListItemUpdateBlock","abstract":"<p>A block that contains all of the updates.</p>"},"Type Definitions.html#/c:IGListUpdatingDelegate.h@T@IGListReloadUpdateBlock":{"name":"IGListReloadUpdateBlock","abstract":"<p>A block to be called when an adapter reloads the collection view.</p>"},"Type Definitions.html#/c:IGListUpdatingDelegate.h@T@IGListToObjectBlock":{"name":"IGListToObjectBlock","abstract":"<p>A block that returns an array of objects to transition to.</p>"},"Protocols/IGListWorkingRangeDelegate.html#/c:objc(pl)IGListWorkingRangeDelegate(im)listAdapter:sectionControllerWillEnterWorkingRange:":{"name":"-listAdapter:sectionControllerWillEnterWorkingRange:","abstract":"<p>Notifies the delegate that an section controller will enter the working range.</p>","parent_name":"IGListWorkingRangeDelegate"},"Protocols/IGListWorkingRangeDelegate.html#/c:objc(pl)IGListWorkingRangeDelegate(im)listAdapter:sectionControllerDidExitWorkingRange:":{"name":"-listAdapter:sectionControllerDidExitWorkingRange:","abstract":"<p>Notifies the delegate that an section controller exited the working range.</p>","parent_name":"IGListWorkingRangeDelegate"},"Protocols/IGListUpdatingDelegate.html#/c:objc(pl)IGListUpdatingDelegate(im)objectLookupPointerFunctions":{"name":"-objectLookupPointerFunctions","abstract":"<p>Asks the delegate for the pointer functions for looking up an object in a collection.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGListUpdatingDelegate.html#/c:objc(pl)IGListUpdatingDelegate(im)performUpdateWithCollectionView:fromObjects:toObjectsBlock:animated:objectTransitionBlock:completion:":{"name":"-performUpdateWithCollectionView:fromObjects:toObjectsBlock:animated:objectTransitionBlock:completion:","abstract":"<p>Tells the delegate to perform a section transition from an old array of objects to a new one.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGListUpdatingDelegate.html#/c:objc(pl)IGListUpdatingDelegate(im)insertItemsIntoCollectionView:indexPaths:":{"name":"-insertItemsIntoCollectionView:indexPaths:","abstract":"<p>Tells the delegate to perform item inserts at the given index paths.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGListUpdatingDelegate.html#/c:objc(pl)IGListUpdatingDelegate(im)deleteItemsFromCollectionView:indexPaths:":{"name":"-deleteItemsFromCollectionView:indexPaths:","abstract":"<p>Tells the delegate to perform item deletes at the given index paths.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGListUpdatingDelegate.html#/c:objc(pl)IGListUpdatingDelegate(im)moveItemInCollectionView:fromIndexPath:toIndexPath:":{"name":"-moveItemInCollectionView:fromIndexPath:toIndexPath:","abstract":"<p>Tells the delegate to move an item from and to given index paths.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGListUpdatingDelegate.html#/c:objc(pl)IGListUpdatingDelegate(im)reloadItemInCollectionView:fromIndexPath:toIndexPath:":{"name":"-reloadItemInCollectionView:fromIndexPath:toIndexPath:","abstract":"<p>Tells the delegate to reload an item from and to given index paths.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGListUpdatingDelegate.html#/c:objc(pl)IGListUpdatingDelegate(im)moveSectionInCollectionView:fromIndex:toIndex:":{"name":"-moveSectionInCollectionView:fromIndex:toIndex:","abstract":"<p>Tells the delegate to move a section from and to given indexes.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGListUpdatingDelegate.html#/c:objc(pl)IGListUpdatingDelegate(im)reloadDataWithCollectionView:reloadUpdateBlock:completion:":{"name":"-reloadDataWithCollectionView:reloadUpdateBlock:completion:","abstract":"<p>Completely reload data in the collection.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGListUpdatingDelegate.html#/c:objc(pl)IGListUpdatingDelegate(im)reloadCollectionView:sections:":{"name":"-reloadCollectionView:sections:","abstract":"<p>Completely reload each section in the collection view.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGListUpdatingDelegate.html#/c:objc(pl)IGListUpdatingDelegate(im)performUpdateWithCollectionView:animated:itemUpdates:completion:":{"name":"-performUpdateWithCollectionView:animated:itemUpdates:completion:","abstract":"<p>Perform an item update block in the collection view.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGListTransitionDelegate.html#/c:objc(pl)IGListTransitionDelegate(im)listAdapter:customizedInitialLayoutAttributes:sectionController:atIndex:":{"name":"-listAdapter:customizedInitialLayoutAttributes:sectionController:atIndex:","abstract":"<p>Asks the delegate to customize and return the starting layout information for an item being inserted into the collection view.</p>","parent_name":"IGListTransitionDelegate"},"Protocols/IGListTransitionDelegate.html#/c:objc(pl)IGListTransitionDelegate(im)listAdapter:customizedFinalLayoutAttributes:sectionController:atIndex:":{"name":"-listAdapter:customizedFinalLayoutAttributes:sectionController:atIndex:","abstract":"<p>Asks the delegate to customize and return the final layout information for an item that is about to be removed from the collection view.</p>","parent_name":"IGListTransitionDelegate"},"Protocols/IGListSupplementaryViewSource.html#/c:objc(pl)IGListSupplementaryViewSource(im)supportedElementKinds":{"name":"-supportedElementKinds","abstract":"<p>Asks the SupplementaryViewSource for an array of supported element kinds.</p>","parent_name":"IGListSupplementaryViewSource"},"Protocols/IGListSupplementaryViewSource.html#/c:objc(pl)IGListSupplementaryViewSource(im)viewForSupplementaryElementOfKind:atIndex:":{"name":"-viewForSupplementaryElementOfKind:atIndex:","abstract":"<p>Asks the SupplementaryViewSource for a configured supplementary view for the specified kind and index.</p>","parent_name":"IGListSupplementaryViewSource"},"Protocols/IGListSupplementaryViewSource.html#/c:objc(pl)IGListSupplementaryViewSource(im)sizeForSupplementaryViewOfKind:atIndex:":{"name":"-sizeForSupplementaryViewOfKind:atIndex:","abstract":"<p>Asks the SupplementaryViewSource for the size of a supplementary view for the given kind and index path.</p>","parent_name":"IGListSupplementaryViewSource"},"Protocols/IGListSingleSectionControllerDelegate.html#/c:objc(pl)IGListSingleSectionControllerDelegate(im)didSelectSectionController:withObject:":{"name":"-didSelectSectionController:withObject:","abstract":"<p>Tells the delegate that the section controller was selected.</p>","parent_name":"IGListSingleSectionControllerDelegate"},"Protocols/IGListSingleSectionControllerDelegate.html#/c:objc(pl)IGListSingleSectionControllerDelegate(im)didDeselectSectionController:withObject:":{"name":"-didDeselectSectionController:withObject:","abstract":"<p>Tells the delegate that the section controller was deselected.</p>","parent_name":"IGListSingleSectionControllerDelegate"},"Protocols/IGListScrollDelegate.html#/c:objc(pl)IGListScrollDelegate(im)listAdapter:didScrollSectionController:":{"name":"-listAdapter:didScrollSectionController:","abstract":"<p>Tells the delegate that the section controller was scrolled on screen.</p>","parent_name":"IGListScrollDelegate"},"Protocols/IGListScrollDelegate.html#/c:objc(pl)IGListScrollDelegate(im)listAdapter:willBeginDraggingSectionController:":{"name":"-listAdapter:willBeginDraggingSectionController:","abstract":"<p>Tells the delegate that the section controller will be dragged on screen.</p>","parent_name":"IGListScrollDelegate"},"Protocols/IGListScrollDelegate.html#/c:objc(pl)IGListScrollDelegate(im)listAdapter:didEndDraggingSectionController:willDecelerate:":{"name":"-listAdapter:didEndDraggingSectionController:willDecelerate:","abstract":"<p>Tells the delegate that the section controller did end dragging on screen.</p>","parent_name":"IGListScrollDelegate"},"Protocols/IGListScrollDelegate.html#/c:objc(pl)IGListScrollDelegate(im)listAdapter:didEndDeceleratingSectionController:":{"name":"-listAdapter:didEndDeceleratingSectionController:","abstract":"<p>Tells the delegate that the section controller did end decelerating on screen.</p>","parent_name":"IGListScrollDelegate"},"Protocols/IGListDisplayDelegate.html#/c:objc(pl)IGListDisplayDelegate(im)listAdapter:willDisplaySectionController:":{"name":"-listAdapter:willDisplaySectionController:","abstract":"<p>Tells the delegate that the specified section controller is about to be displayed.</p>","parent_name":"IGListDisplayDelegate"},"Protocols/IGListDisplayDelegate.html#/c:objc(pl)IGListDisplayDelegate(im)listAdapter:didEndDisplayingSectionController:":{"name":"-listAdapter:didEndDisplayingSectionController:","abstract":"<p>Tells the delegate that the specified section controller is no longer being displayed.</p>","parent_name":"IGListDisplayDelegate"},"Protocols/IGListDisplayDelegate.html#/c:objc(pl)IGListDisplayDelegate(im)listAdapter:willDisplaySectionController:cell:atIndex:":{"name":"-listAdapter:willDisplaySectionController:cell:atIndex:","abstract":"<p>Tells the delegate that a cell in the specified list is about to be displayed.</p>","parent_name":"IGListDisplayDelegate"},"Protocols/IGListDisplayDelegate.html#/c:objc(pl)IGListDisplayDelegate(im)listAdapter:didEndDisplayingSectionController:cell:atIndex:":{"name":"-listAdapter:didEndDisplayingSectionController:cell:atIndex:","abstract":"<p>Tells the delegate that a cell in the specified list is no longer being displayed.</p>","parent_name":"IGListDisplayDelegate"},"Protocols/IGListDiffable.html#/c:objc(pl)IGListDiffable(im)diffIdentifier":{"name":"-diffIdentifier","abstract":"<p>Returns a key that uniquely identifies the object.</p>","parent_name":"IGListDiffable"},"Protocols/IGListDiffable.html#/c:objc(pl)IGListDiffable(im)isEqualToDiffableObject:":{"name":"-isEqualToDiffableObject:","abstract":"<p>Returns whether the receiver and a given object are equal.</p>","parent_name":"IGListDiffable"},"Protocols/IGListCollectionViewDelegateLayout.html#/c:objc(pl)IGListCollectionViewDelegateLayout(im)collectionView:layout:customizedInitialLayoutAttributes:atIndexPath:":{"name":"-collectionView:layout:customizedInitialLayoutAttributes:atIndexPath:","abstract":"<p>Asks the delegate to customize and return the starting layout information for an item being inserted into the collection view.</p>","parent_name":"IGListCollectionViewDelegateLayout"},"Protocols/IGListCollectionViewDelegateLayout.html#/c:objc(pl)IGListCollectionViewDelegateLayout(im)collectionView:layout:customizedFinalLayoutAttributes:atIndexPath:":{"name":"-collectionView:layout:customizedFinalLayoutAttributes:atIndexPath:","abstract":"<p>Asks the delegate to customize and return the final layout information for an item that is about to be removed from the collection view.</p>","parent_name":"IGListCollectionViewDelegateLayout"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(py)containerSize":{"name":"containerSize","abstract":"<p>The size of the collection view. You can use this for sizing cells.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(py)containerInset":{"name":"containerInset","abstract":"<p>The content insets of the collection view. You can use this for sizing cells.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(py)adjustedContainerInset":{"name":"adjustedContainerInset","abstract":"<p>The adjusted content insets of the collection view. Equivalent to containerInset under iOS 11.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(py)insetContainerSize":{"name":"insetContainerSize","abstract":"<p>The size of the collection view with content insets applied.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)containerSizeForSectionController:":{"name":"-containerSizeForSectionController:","abstract":"<p>Returns size of the collection view relative to the section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)indexForCell:sectionController:":{"name":"-indexForCell:sectionController:","abstract":"<p>Returns the index of the specified cell in the collection relative to the section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)cellForItemAtIndex:sectionController:":{"name":"-cellForItemAtIndex:sectionController:","abstract":"<p>Returns the cell in the collection at the specified index for the section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)visibleCellsForSectionController:":{"name":"-visibleCellsForSectionController:","abstract":"<p>Returns the visible cells for the given section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)visibleIndexPathsForSectionController:":{"name":"-visibleIndexPathsForSectionController:","abstract":"<p>Returns the visible paths for the given section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)deselectItemAtIndex:sectionController:animated:":{"name":"-deselectItemAtIndex:sectionController:animated:","abstract":"<p>Deselects a cell in the collection.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)selectItemAtIndex:sectionController:animated:scrollPosition:":{"name":"-selectItemAtIndex:sectionController:animated:scrollPosition:","abstract":"<p>Selects a cell in the collection.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)dequeueReusableCellOfClass:withReuseIdentifier:forSectionController:atIndex:":{"name":"-dequeueReusableCellOfClass:withReuseIdentifier:forSectionController:atIndex:","abstract":"<p>Dequeues a cell from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)dequeueReusableCellOfClass:forSectionController:atIndex:":{"name":"-dequeueReusableCellOfClass:forSectionController:atIndex:","abstract":"<p>Dequeues a cell from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)dequeueReusableCellWithNibName:bundle:forSectionController:atIndex:":{"name":"-dequeueReusableCellWithNibName:bundle:forSectionController:atIndex:","abstract":"<p>Dequeues a cell from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)dequeueReusableCellFromStoryboardWithIdentifier:forSectionController:atIndex:":{"name":"-dequeueReusableCellFromStoryboardWithIdentifier:forSectionController:atIndex:","abstract":"<p>Dequeues a storyboard prototype cell from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)dequeueReusableSupplementaryViewOfKind:forSectionController:class:atIndex:":{"name":"-dequeueReusableSupplementaryViewOfKind:forSectionController:class:atIndex:","abstract":"<p>Dequeues a supplementary view from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)dequeueReusableSupplementaryViewFromStoryboardOfKind:withIdentifier:forSectionController:atIndex:":{"name":"-dequeueReusableSupplementaryViewFromStoryboardOfKind:withIdentifier:forSectionController:atIndex:","abstract":"<p>Dequeues a supplementary view from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)dequeueReusableSupplementaryViewOfKind:forSectionController:nibName:bundle:atIndex:":{"name":"-dequeueReusableSupplementaryViewOfKind:forSectionController:nibName:bundle:atIndex:","abstract":"<p>Dequeues a supplementary view from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)invalidateLayoutForSectionController:completion:":{"name":"-invalidateLayoutForSectionController:completion:","abstract":"<p>Invalidate the backing <code>UICollectionViewLayout</code> for all items in the section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)performBatchAnimated:updates:completion:":{"name":"-performBatchAnimated:updates:completion:","abstract":"<p>Batches and performs many cell-level updates in a single transaction.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)scrollToSectionController:atIndex:scrollPosition:animated:":{"name":"-scrollToSectionController:atIndex:scrollPosition:animated:","abstract":"<p>Scrolls to the specified section controller in the list.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGListBindingSectionControllerSelectionDelegate.html#/c:objc(pl)IGListBindingSectionControllerSelectionDelegate(im)sectionController:didSelectItemAtIndex:viewModel:":{"name":"-sectionController:didSelectItemAtIndex:viewModel:","abstract":"<p>Tells the delegate that a cell at a given index was selected.</p>","parent_name":"IGListBindingSectionControllerSelectionDelegate"},"Protocols/IGListBindingSectionControllerSelectionDelegate.html#/c:objc(pl)IGListBindingSectionControllerSelectionDelegate(im)sectionController:didDeselectItemAtIndex:viewModel:":{"name":"-sectionController:didDeselectItemAtIndex:viewModel:","abstract":"<p>Tells the delegate that a cell at a given index was deselected.</p>","parent_name":"IGListBindingSectionControllerSelectionDelegate"},"Protocols/IGListBindingSectionControllerSelectionDelegate.html#/c:objc(pl)IGListBindingSectionControllerSelectionDelegate(im)sectionController:didHighlightItemAtIndex:viewModel:":{"name":"-sectionController:didHighlightItemAtIndex:viewModel:","abstract":"<p>Tells the delegate that a cell at a given index was highlighted.</p>","parent_name":"IGListBindingSectionControllerSelectionDelegate"},"Protocols/IGListBindingSectionControllerSelectionDelegate.html#/c:objc(pl)IGListBindingSectionControllerSelectionDelegate(im)sectionController:didUnhighlightItemAtIndex:viewModel:":{"name":"-sectionController:didUnhighlightItemAtIndex:viewModel:","abstract":"<p>Tells the delegate that a cell at a given index was unhighlighted.</p>","parent_name":"IGListBindingSectionControllerSelectionDelegate"},"Protocols/IGListBindingSectionControllerDataSource.html#/c:objc(pl)IGListBindingSectionControllerDataSource(im)sectionController:viewModelsForObject:":{"name":"-sectionController:viewModelsForObject:","abstract":"<p>Create an array of view models given a top-level object.</p>","parent_name":"IGListBindingSectionControllerDataSource"},"Protocols/IGListBindingSectionControllerDataSource.html#/c:objc(pl)IGListBindingSectionControllerDataSource(im)sectionController:cellForViewModel:atIndex:":{"name":"-sectionController:cellForViewModel:atIndex:","abstract":"<p>Return a dequeued cell for a given view model.</p>","parent_name":"IGListBindingSectionControllerDataSource"},"Protocols/IGListBindingSectionControllerDataSource.html#/c:objc(pl)IGListBindingSectionControllerDataSource(im)sectionController:sizeForViewModel:atIndex:":{"name":"-sectionController:sizeForViewModel:atIndex:","abstract":"<p>Return a cell size for a given view model.</p>","parent_name":"IGListBindingSectionControllerDataSource"},"Protocols/IGListBindable.html#/c:objc(pl)IGListBindable(im)bindViewModel:":{"name":"-bindViewModel:","abstract":"<p>Tells the cell to configure itself with the given view model.</p>","parent_name":"IGListBindable"},"Protocols/IGListBatchContext.html#/c:objc(pl)IGListBatchContext(im)reloadInSectionController:atIndexes:":{"name":"-reloadInSectionController:atIndexes:","abstract":"<p>Reloads cells in the section controller.</p>","parent_name":"IGListBatchContext"},"Protocols/IGListBatchContext.html#/c:objc(pl)IGListBatchContext(im)insertInSectionController:atIndexes:":{"name":"-insertInSectionController:atIndexes:","abstract":"<p>Inserts cells in the list.</p>","parent_name":"IGListBatchContext"},"Protocols/IGListBatchContext.html#/c:objc(pl)IGListBatchContext(im)deleteInSectionController:atIndexes:":{"name":"-deleteInSectionController:atIndexes:","abstract":"<p>Deletes cells in the list.</p>","parent_name":"IGListBatchContext"},"Protocols/IGListBatchContext.html#/c:objc(pl)IGListBatchContext(im)moveInSectionController:fromIndex:toIndex:":{"name":"-moveInSectionController:fromIndex:toIndex:","abstract":"<p>Moves a cell from one index to another within the section controller.</p>","parent_name":"IGListBatchContext"},"Protocols/IGListBatchContext.html#/c:objc(pl)IGListBatchContext(im)reloadSectionController:":{"name":"-reloadSectionController:","abstract":"<p>Reloads the entire section controller.</p>","parent_name":"IGListBatchContext"},"Protocols/IGListBatchContext.html#/c:objc(pl)IGListBatchContext(im)moveSectionControllerInteractive:fromIndex:toIndex:":{"name":"-moveSectionControllerInteractive:fromIndex:toIndex:","abstract":"<p>Moves a section controller from one index to another during interactive reordering.</p>","parent_name":"IGListBatchContext"},"Protocols/IGListBatchContext.html#/c:objc(pl)IGListBatchContext(im)moveInSectionControllerInteractive:fromIndex:toIndex:":{"name":"-moveInSectionControllerInteractive:fromIndex:toIndex:","abstract":"<p>Moves an object within a section controller from one index to another during interactive reordering.</p>","parent_name":"IGListBatchContext"},"Protocols/IGListBatchContext.html#/c:objc(pl)IGListBatchContext(im)revertInvalidInteractiveMoveFromIndexPath:toIndexPath:":{"name":"-revertInvalidInteractiveMoveFromIndexPath:toIndexPath:","abstract":"<p>Reverts an move from one indexPath to another during interactive reordering.</p>","parent_name":"IGListBatchContext"},"Protocols/IGListAdapterUpdaterDelegate.html#/c:objc(pl)IGListAdapterUpdaterDelegate(im)listAdapterUpdater:willPerformBatchUpdatesWithCollectionView:":{"name":"-listAdapterUpdater:willPerformBatchUpdatesWithCollectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView performBatchUpdates:completion:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGListAdapterUpdaterDelegate.html#/c:objc(pl)IGListAdapterUpdaterDelegate(im)listAdapterUpdater:didPerformBatchUpdates:collectionView:":{"name":"-listAdapterUpdater:didPerformBatchUpdates:collectionView:","abstract":"<p>Notifies the delegate that the updater successfully finished <code>-[UICollectionView performBatchUpdates:completion:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGListAdapterUpdaterDelegate.html#/c:objc(pl)IGListAdapterUpdaterDelegate(im)listAdapterUpdater:willInsertIndexPaths:collectionView:":{"name":"-listAdapterUpdater:willInsertIndexPaths:collectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView insertItemsAtIndexPaths:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGListAdapterUpdaterDelegate.html#/c:objc(pl)IGListAdapterUpdaterDelegate(im)listAdapterUpdater:willDeleteIndexPaths:collectionView:":{"name":"-listAdapterUpdater:willDeleteIndexPaths:collectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView deleteItemsAtIndexPaths:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGListAdapterUpdaterDelegate.html#/c:objc(pl)IGListAdapterUpdaterDelegate(im)listAdapterUpdater:willMoveFromIndexPath:toIndexPath:collectionView:":{"name":"-listAdapterUpdater:willMoveFromIndexPath:toIndexPath:collectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView moveItemAtIndexPath:toIndexPath:]</code></p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGListAdapterUpdaterDelegate.html#/c:objc(pl)IGListAdapterUpdaterDelegate(im)listAdapterUpdater:willReloadIndexPaths:collectionView:":{"name":"-listAdapterUpdater:willReloadIndexPaths:collectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView reloadItemsAtIndexPaths:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGListAdapterUpdaterDelegate.html#/c:objc(pl)IGListAdapterUpdaterDelegate(im)listAdapterUpdater:willReloadSections:collectionView:":{"name":"-listAdapterUpdater:willReloadSections:collectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView reloadSections:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGListAdapterUpdaterDelegate.html#/c:objc(pl)IGListAdapterUpdaterDelegate(im)listAdapterUpdater:willReloadDataWithCollectionView:":{"name":"-listAdapterUpdater:willReloadDataWithCollectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView reloadData]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGListAdapterUpdaterDelegate.html#/c:objc(pl)IGListAdapterUpdaterDelegate(im)listAdapterUpdater:didReloadDataWithCollectionView:":{"name":"-listAdapterUpdater:didReloadDataWithCollectionView:","abstract":"<p>Notifies the delegate that the updater successfully called <code>-[UICollectionView reloadData]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGListAdapterUpdaterDelegate.html#/c:objc(pl)IGListAdapterUpdaterDelegate(im)listAdapterUpdater:collectionView:willCrashWithException:fromObjects:toObjects:updates:":{"name":"-listAdapterUpdater:collectionView:willCrashWithException:fromObjects:toObjects:updates:","abstract":"<p>Notifies the delegate that the collection view threw an exception in <code>-[UICollectionView performBatchUpdates:completion:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGListAdapterUpdateListener.html#/c:objc(pl)IGListAdapterUpdateListener(im)listAdapter:didFinishUpdate:animated:":{"name":"-listAdapter:didFinishUpdate:animated:","abstract":"<p>Notifies a listener that the listAdapter was updated.</p>","parent_name":"IGListAdapterUpdateListener"},"Protocols/IGListAdapterMoveDelegate.html#/c:objc(pl)IGListAdapterMoveDelegate(im)listAdapter:moveObject:from:to:":{"name":"-listAdapter:moveObject:from:to:","abstract":"<p>Asks the delegate to move a section object as the result of interactive reordering.</p>","parent_name":"IGListAdapterMoveDelegate"},"Protocols/IGListAdapterDelegate.html#/c:objc(pl)IGListAdapterDelegate(im)listAdapter:willDisplayObject:atIndex:":{"name":"-listAdapter:willDisplayObject:atIndex:","abstract":"<p>Notifies the delegate that a list object is about to be displayed.</p>","parent_name":"IGListAdapterDelegate"},"Protocols/IGListAdapterDelegate.html#/c:objc(pl)IGListAdapterDelegate(im)listAdapter:didEndDisplayingObject:atIndex:":{"name":"-listAdapter:didEndDisplayingObject:atIndex:","abstract":"<p>Notifies the delegate that a list object is no longer being displayed.</p>","parent_name":"IGListAdapterDelegate"},"Protocols/IGListAdapterDataSource.html#/c:objc(pl)IGListAdapterDataSource(im)objectsForListAdapter:":{"name":"-objectsForListAdapter:","abstract":"<p>Asks the data source for the objects to display in the list.</p>","parent_name":"IGListAdapterDataSource"},"Protocols/IGListAdapterDataSource.html#/c:objc(pl)IGListAdapterDataSource(im)listAdapter:sectionControllerForObject:":{"name":"-listAdapter:sectionControllerForObject:","abstract":"<p>Asks the data source for a section controller for the specified object in the list.</p>","parent_name":"IGListAdapterDataSource"},"Protocols/IGListAdapterDataSource.html#/c:objc(pl)IGListAdapterDataSource(im)emptyViewForListAdapter:":{"name":"-emptyViewForListAdapter:","abstract":"<p>Asks the data source for a view to use as the collection view background when the list is empty.</p>","parent_name":"IGListAdapterDataSource"},"Protocols/IGListAdapterDataSource.html":{"name":"IGListAdapterDataSource","abstract":"<p>Implement this protocol to provide data to an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListAdapter.html\">IGListAdapter</a></code>.</p>"},"Protocols/IGListAdapterDelegate.html":{"name":"IGListAdapterDelegate","abstract":"<p>Conform to <code>IGListAdapterDelegate</code> to receive display events for objects in a list.</p>"},"Protocols/IGListAdapterMoveDelegate.html":{"name":"IGListAdapterMoveDelegate","abstract":"<p>Conform to <code>IGListAdapterMoveDelegate</code> to receive interactive reordering requests.</p>"},"Protocols/IGListAdapterUpdateListener.html":{"name":"IGListAdapterUpdateListener","abstract":"<p>Conform to this protocol to receive events about <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListAdapter.html\">IGListAdapter</a></code> updates.</p>"},"Protocols/IGListAdapterUpdaterDelegate.html":{"name":"IGListAdapterUpdaterDelegate","abstract":"<p>A protocol that receives events about <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListAdapterUpdater.html\">IGListAdapterUpdater</a></code> operations.</p>"},"Protocols/IGListBatchContext.html":{"name":"IGListBatchContext","abstract":"<p>Objects conforming to the IGListBatchContext protocol provide a way for section controllers to mutate their cells or"},"Protocols/IGListBindable.html":{"name":"IGListBindable","abstract":"<p>A protocol for cells that configure themselves given a view model.</p>"},"Protocols/IGListBindingSectionControllerDataSource.html":{"name":"IGListBindingSectionControllerDataSource","abstract":"<p>A protocol that returns data to power cells in an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListBindingSectionController.html\">IGListBindingSectionController</a></code>.</p>"},"Protocols/IGListBindingSectionControllerSelectionDelegate.html":{"name":"IGListBindingSectionControllerSelectionDelegate","abstract":"<p>A protocol that handles cell selection events in an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListBindingSectionController.html\">IGListBindingSectionController</a></code>.</p>"},"Protocols/IGListCollectionContext.html":{"name":"IGListCollectionContext","abstract":"<p>The collection context provides limited access to the collection-related information that"},"Protocols/IGListCollectionViewDelegateLayout.html":{"name":"IGListCollectionViewDelegateLayout","abstract":"<p>Conform to <code>IGListCollectionViewDelegateLayout</code> to provide customized layout information for a collection view.</p>"},"Protocols/IGListDiffable.html":{"name":"IGListDiffable","abstract":"<p>The <code>IGListDiffable</code> protocol provides methods needed to compare the identity and equality of two objects.</p>"},"Protocols/IGListDisplayDelegate.html":{"name":"IGListDisplayDelegate","abstract":"<p>Implement this protocol to receive display events for a section controller when it is on screen.</p>"},"Protocols/IGListScrollDelegate.html":{"name":"IGListScrollDelegate","abstract":"<p>Implement this protocol to receive display events for a section controller when it is on screen.</p>"},"Protocols/IGListSingleSectionControllerDelegate.html":{"name":"IGListSingleSectionControllerDelegate","abstract":"<p>A delegate that can receive selection events on an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListSingleSectionController.html\">IGListSingleSectionController</a></code>.</p>"},"Protocols/IGListSupplementaryViewSource.html":{"name":"IGListSupplementaryViewSource","abstract":"<p>Conform to this protocol to provide information about a list&rsquo;s supplementary views. This data is used in"},"Protocols/IGListTransitionDelegate.html":{"name":"IGListTransitionDelegate","abstract":"<p>Conform to <code>IGListTransitionDelegate</code> to provide customized layout information for a collection view.</p>"},"Protocols/IGListUpdatingDelegate.html":{"name":"IGListUpdatingDelegate","abstract":"<p>Implement this protocol in order to handle both section and row based update events. Implementation should forward or"},"Protocols/IGListWorkingRangeDelegate.html":{"name":"IGListWorkingRangeDelegate","abstract":"<p>Implement this protocol to receive working range events for a list.</p>"},"Enums/IGListExperiment.html#/c:@E@IGListExperiment@IGListExperimentNone":{"name":"IGListExperimentNone","abstract":"<p>Specifies no experiments.</p>","parent_name":"IGListExperiment"},"Enums/IGListExperiment.html#/c:@E@IGListExperiment@IGListExperimentBackgroundDiffing":{"name":"IGListExperimentBackgroundDiffing","abstract":"<p>Test updater diffing performed on a background queue.</p>","parent_name":"IGListExperiment"},"Enums/IGListExperiment.html#/c:@E@IGListExperiment@IGListExperimentReloadDataFallback":{"name":"IGListExperimentReloadDataFallback","abstract":"<p>Test fallback to reloadData when <q>too many</q> update operations.</p>","parent_name":"IGListExperiment"},"Enums/IGListExperiment.html#/c:@E@IGListExperiment@IGListExperimentFasterVisibleSectionController":{"name":"IGListExperimentFasterVisibleSectionController","abstract":"<p>Test a faster way to return visible section controllers.</p>","parent_name":"IGListExperiment"},"Enums/IGListExperiment.html#/c:@E@IGListExperiment@IGListExperimentDedupeItemUpdates":{"name":"IGListExperimentDedupeItemUpdates","abstract":"<p>Test deduping item-level updates.</p>","parent_name":"IGListExperiment"},"Enums/IGListExperiment.html#/c:@E@IGListExperiment@IGListExperimentDeferredToObjectCreation":{"name":"IGListExperimentDeferredToObjectCreation","abstract":"<p>Test deferring object creation until just before diffing.</p>","parent_name":"IGListExperiment"},"Enums/IGListDiffOption.html#/c:@E@IGListDiffOption@IGListDiffPointerPersonality":{"name":"IGListDiffPointerPersonality","abstract":"<p>Compare objects using pointer personality.</p>","parent_name":"IGListDiffOption"},"Enums/IGListDiffOption.html#/c:@E@IGListDiffOption@IGListDiffEquality":{"name":"IGListDiffEquality","abstract":"<p>Compare objects using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IGListDiffable.html#/c:objc(pl)IGListDiffable(im)isEqualToDiffableObject:\">-[IGListDiffable isEqualToDiffableObject:]</a></code>.</p>","parent_name":"IGListDiffOption"},"Enums/IGListAdapterUpdateType.html#/c:@E@IGListAdapterUpdateType@IGListAdapterUpdateTypePerformUpdates":{"name":"IGListAdapterUpdateTypePerformUpdates","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)performUpdatesAnimated:completion:\">-[IGListAdapter performUpdatesAnimated:completion:]</a></code> was executed.</p>","parent_name":"IGListAdapterUpdateType"},"Enums/IGListAdapterUpdateType.html#/c:@E@IGListAdapterUpdateType@IGListAdapterUpdateTypeReloadData":{"name":"IGListAdapterUpdateTypeReloadData","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)reloadDataWithCompletion:\">-[IGListAdapter reloadDataWithCompletion:]</a></code> was executed.</p>","parent_name":"IGListAdapterUpdateType"},"Enums/IGListAdapterUpdateType.html#/c:@E@IGListAdapterUpdateType@IGListAdapterUpdateTypeItemUpdates":{"name":"IGListAdapterUpdateTypeItemUpdates","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IGListCollectionContext.html#/c:objc(pl)IGListCollectionContext(im)performBatchAnimated:updates:completion:\">-[IGListCollectionContext performBatchAnimated:updates:completion:]</a></code> was executed by an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListSectionController.html\">IGListSectionController</a></code>.</p>","parent_name":"IGListAdapterUpdateType"},"Enums/IGListAdapterUpdateType.html":{"name":"IGListAdapterUpdateType","abstract":"<p>The type of update that was performed by an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListAdapter.html\">IGListAdapter</a></code>.</p>"},"Enums/IGListDiffOption.html":{"name":"IGListDiffOption","abstract":"<p>An option for how to do comparisons between similar objects.</p>"},"Enums/IGListExperiment.html":{"name":"IGListExperiment","abstract":"<p>Bitmask-able options used for pre-release feature testing.</p>"},"Constants.html#/c:@IGListKitVersionNumber":{"name":"IGListKitVersionNumber","abstract":"<p>Project version number for IGListKit.</p>"},"Constants.html#/c:@IGListKitVersionString":{"name":"IGListKitVersionString","abstract":"<p>Project version string for IGListKit.</p>"},"Classes/IGListStackedSectionController.html#/c:objc(cs)IGListStackedSectionController(im)initWithSectionControllers:":{"name":"-initWithSectionControllers:","abstract":"<p>Creates a new stacked section controller.</p>","parent_name":"IGListStackedSectionController"},"Classes/IGListSingleSectionController.html#/c:objc(cs)IGListSingleSectionController(im)initWithCellClass:configureBlock:sizeBlock:":{"name":"-initWithCellClass:configureBlock:sizeBlock:","abstract":"<p>Creates a new section controller for a given cell type that will always have only one cell when present in a list.</p>","parent_name":"IGListSingleSectionController"},"Classes/IGListSingleSectionController.html#/c:objc(cs)IGListSingleSectionController(im)initWithNibName:bundle:configureBlock:sizeBlock:":{"name":"-initWithNibName:bundle:configureBlock:sizeBlock:","abstract":"<p>Creates a new section controller for a given nib name and bundle that will always have only one cell when present in a list.</p>","parent_name":"IGListSingleSectionController"},"Classes/IGListSingleSectionController.html#/c:objc(cs)IGListSingleSectionController(im)initWithStoryboardCellIdentifier:configureBlock:sizeBlock:":{"name":"-initWithStoryboardCellIdentifier:configureBlock:sizeBlock:","abstract":"<p>Creates a new section controller for a given storyboard cell identifier that will always have only one cell when present in a list.</p>","parent_name":"IGListSingleSectionController"},"Classes/IGListSingleSectionController.html#/c:objc(cs)IGListSingleSectionController(py)selectionDelegate":{"name":"selectionDelegate","abstract":"<p>An optional delegate that handles selection and deselection.</p>","parent_name":"IGListSingleSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(im)numberOfItems":{"name":"-numberOfItems","abstract":"<p>Returns the number of items in the section.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(im)sizeForItemAtIndex:":{"name":"-sizeForItemAtIndex:","abstract":"<p>The specific size for the item at the specified index.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(im)cellForItemAtIndex:":{"name":"-cellForItemAtIndex:","abstract":"<p>Return a dequeued cell for a given index.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(im)didUpdateToObject:":{"name":"-didUpdateToObject:","abstract":"<p>Updates the section controller to a new object.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(im)didSelectItemAtIndex:":{"name":"-didSelectItemAtIndex:","abstract":"<p>Tells the section controller that the cell at the specified index path was selected.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(im)didDeselectItemAtIndex:":{"name":"-didDeselectItemAtIndex:","abstract":"<p>Tells the section controller that the cell at the specified index path was deselected.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(im)didHighlightItemAtIndex:":{"name":"-didHighlightItemAtIndex:","abstract":"<p>Tells the section controller that the cell at the specified index path was highlighted.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(im)didUnhighlightItemAtIndex:":{"name":"-didUnhighlightItemAtIndex:","abstract":"<p>Tells the section controller that the cell at the specified index path was unhighlighted.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(im)canMoveItemAtIndex:":{"name":"-canMoveItemAtIndex:","abstract":"<p>Identifies whether an object can be moved through interactive reordering.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(im)moveObjectFromIndex:toIndex:":{"name":"-moveObjectFromIndex:toIndex:","abstract":"<p>Notifies the section that a list object should move within a section as the result of interactive reordering.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)viewController":{"name":"viewController","abstract":"<p>The view controller housing the adapter that created this section controller.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)collectionContext":{"name":"collectionContext","abstract":"<p>A context object for interacting with the collection. </p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)section":{"name":"section","abstract":"<p>Returns the section within the list for this section controller.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)isFirstSection":{"name":"isFirstSection","abstract":"<p>Returns <code>YES</code> if the section controller is the first section in the list, <code>NO</code> otherwise.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)isLastSection":{"name":"isLastSection","abstract":"<p>Returns <code>YES</code> if the section controller is the last section in the list, <code>NO</code> otherwise.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)inset":{"name":"inset","abstract":"<p>The margins used to lay out content in the section controller.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)minimumLineSpacing":{"name":"minimumLineSpacing","abstract":"<p>The minimum spacing to use between rows of items.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)minimumInteritemSpacing":{"name":"minimumInteritemSpacing","abstract":"<p>The minimum spacing to use between items in the same row.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)supplementaryViewSource":{"name":"supplementaryViewSource","abstract":"<p>The supplementary view source for the section controller. Can be <code>nil</code>.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)displayDelegate":{"name":"displayDelegate","abstract":"<p>An object that handles display events for the section controller. Can be <code>nil</code>.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)workingRangeDelegate":{"name":"workingRangeDelegate","abstract":"<p>An object that handles working range events for the section controller. Can be <code>nil</code>.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)scrollDelegate":{"name":"scrollDelegate","abstract":"<p>An object that handles scroll events for the section controller. Can be <code>nil</code>.</p>","parent_name":"IGListSectionController"},"Classes/IGListSectionController.html#/c:objc(cs)IGListSectionController(py)transitionDelegate":{"name":"transitionDelegate","abstract":"<p>An object that handles transition events for the section controller. Can be <code>nil</code>.</p>","parent_name":"IGListSectionController"},"Classes/IGListMoveIndexPath.html#/c:objc(cs)IGListMoveIndexPath(py)from":{"name":"from","abstract":"<p>An index path in the old collection.</p>","parent_name":"IGListMoveIndexPath"},"Classes/IGListMoveIndexPath.html#/c:objc(cs)IGListMoveIndexPath(py)to":{"name":"to","abstract":"<p>An index path in the new collection.</p>","parent_name":"IGListMoveIndexPath"},"Classes/IGListMoveIndex.html#/c:objc(cs)IGListMoveIndex(py)from":{"name":"from","abstract":"<p>An index in the old collection.</p>","parent_name":"IGListMoveIndex"},"Classes/IGListMoveIndex.html#/c:objc(cs)IGListMoveIndex(py)to":{"name":"to","abstract":"<p>An index in the new collection.</p>","parent_name":"IGListMoveIndex"},"Classes/IGListIndexSetResult.html#/c:objc(cs)IGListIndexSetResult(py)inserts":{"name":"inserts","abstract":"<p>The indexes inserted into the new collection.</p>","parent_name":"IGListIndexSetResult"},"Classes/IGListIndexSetResult.html#/c:objc(cs)IGListIndexSetResult(py)deletes":{"name":"deletes","abstract":"<p>The indexes deleted from the old collection.</p>","parent_name":"IGListIndexSetResult"},"Classes/IGListIndexSetResult.html#/c:objc(cs)IGListIndexSetResult(py)updates":{"name":"updates","abstract":"<p>The indexes in the old collection that need updated.</p>","parent_name":"IGListIndexSetResult"},"Classes/IGListIndexSetResult.html#/c:objc(cs)IGListIndexSetResult(py)moves":{"name":"moves","abstract":"<p>The moves from an index in the old collection to an index in the new collection.</p>","parent_name":"IGListIndexSetResult"},"Classes/IGListIndexSetResult.html#/c:objc(cs)IGListIndexSetResult(py)hasChanges":{"name":"hasChanges","abstract":"<p>A Read-only boolean that indicates whether the result has any changes or not.","parent_name":"IGListIndexSetResult"},"Classes/IGListIndexSetResult.html#/c:objc(cs)IGListIndexSetResult(im)oldIndexForIdentifier:":{"name":"-oldIndexForIdentifier:","abstract":"<p>Returns the index of the object with the specified identifier <em>before</em> the diff.</p>","parent_name":"IGListIndexSetResult"},"Classes/IGListIndexSetResult.html#/c:objc(cs)IGListIndexSetResult(im)newIndexForIdentifier:":{"name":"-newIndexForIdentifier:","abstract":"<p>Returns the index of the object with the specified identifier <em>after</em> the diff.</p>","parent_name":"IGListIndexSetResult"},"Classes/IGListIndexSetResult.html#/c:objc(cs)IGListIndexSetResult(im)resultForBatchUpdates":{"name":"-resultForBatchUpdates","abstract":"<p>Creates a new result object with operations safe for use in <code>UITableView</code> and <code>UICollectionView</code> batch updates.</p>","parent_name":"IGListIndexSetResult"},"Classes/IGListIndexPathResult.html#/c:objc(cs)IGListIndexPathResult(py)inserts":{"name":"inserts","abstract":"<p>The index paths inserted into the new collection.</p>","parent_name":"IGListIndexPathResult"},"Classes/IGListIndexPathResult.html#/c:objc(cs)IGListIndexPathResult(py)deletes":{"name":"deletes","abstract":"<p>The index paths deleted from the old collection.</p>","parent_name":"IGListIndexPathResult"},"Classes/IGListIndexPathResult.html#/c:objc(cs)IGListIndexPathResult(py)updates":{"name":"updates","abstract":"<p>The index paths in the old collection that need updated.</p>","parent_name":"IGListIndexPathResult"},"Classes/IGListIndexPathResult.html#/c:objc(cs)IGListIndexPathResult(py)moves":{"name":"moves","abstract":"<p>The moves from an index path in the old collection to an index path in the new collection.</p>","parent_name":"IGListIndexPathResult"},"Classes/IGListIndexPathResult.html#/c:objc(cs)IGListIndexPathResult(py)hasChanges":{"name":"hasChanges","abstract":"<p>A Read-only boolean that indicates whether the result has any changes or not.","parent_name":"IGListIndexPathResult"},"Classes/IGListIndexPathResult.html#/c:objc(cs)IGListIndexPathResult(im)oldIndexPathForIdentifier:":{"name":"-oldIndexPathForIdentifier:","abstract":"<p>Returns the index path of the object with the specified identifier <em>before</em> the diff.</p>","parent_name":"IGListIndexPathResult"},"Classes/IGListIndexPathResult.html#/c:objc(cs)IGListIndexPathResult(im)newIndexPathForIdentifier:":{"name":"-newIndexPathForIdentifier:","abstract":"<p>Returns the index path of the object with the specified identifier <em>after</em> the diff.</p>","parent_name":"IGListIndexPathResult"},"Classes/IGListIndexPathResult.html#/c:objc(cs)IGListIndexPathResult(im)resultForBatchUpdates":{"name":"-resultForBatchUpdates","abstract":"<p>Creates a new result object with operations safe for use in <code>UITableView</code> and <code>UICollectionView</code> batch updates.</p>","parent_name":"IGListIndexPathResult"},"Classes/IGListGenericSectionController.html#/c:objc(cs)IGListGenericSectionController(py)object":{"name":"object","abstract":"<p>The object mapped to this section controller. Matches the object provided in","parent_name":"IGListGenericSectionController"},"Classes/IGListGenericSectionController.html#/c:objc(cs)IGListGenericSectionController(im)didUpdateToObject:":{"name":"-didUpdateToObject:","abstract":"<p>Updates the section controller to a new object.</p>","parent_name":"IGListGenericSectionController"},"Classes/IGListCollectionViewLayout.html#/c:objc(cs)IGListCollectionViewLayout(py)scrollDirection":{"name":"scrollDirection","abstract":"<p>Direction in which layout will be scrollable; items will be flowed in the perpendicular direction, <q>newlining</q> when they","parent_name":"IGListCollectionViewLayout"},"Classes/IGListCollectionViewLayout.html#/c:objc(cs)IGListCollectionViewLayout(py)stickyHeaderYOffset":{"name":"stickyHeaderYOffset","abstract":"<p>Set this to adjust the offset of the sticky headers in the scrolling direction. Can be used to change the sticky","parent_name":"IGListCollectionViewLayout"},"Classes/IGListCollectionViewLayout.html#/c:objc(cs)IGListCollectionViewLayout(py)showHeaderWhenEmpty":{"name":"showHeaderWhenEmpty","abstract":"<p>Set this to <code>YES</code> to show sticky header when a section had no item. Default is <code>NO</code>.</p>","parent_name":"IGListCollectionViewLayout"},"Classes/IGListCollectionViewLayout.html#/c:objc(cs)IGListCollectionViewLayout(im)didModifySection:":{"name":"-didModifySection:","abstract":"<p>Notify the layout that a specific section was modified before invalidation. Used to optimize layout re-calculation.</p>","parent_name":"IGListCollectionViewLayout"},"Classes/IGListCollectionViewLayout.html#/c:objc(cs)IGListCollectionViewLayout(im)initWithStickyHeaders:scrollDirection:topContentInset:stretchToEdge:":{"name":"-initWithStickyHeaders:scrollDirection:topContentInset:stretchToEdge:","abstract":"<p>Create and return a new collection view layout.</p>","parent_name":"IGListCollectionViewLayout"},"Classes/IGListCollectionViewLayout.html#/c:objc(cs)IGListCollectionViewLayout(im)initWithStickyHeaders:topContentInset:stretchToEdge:":{"name":"-initWithStickyHeaders:topContentInset:stretchToEdge:","abstract":"<p>Create and return a new vertically scrolling collection view layout.</p>","parent_name":"IGListCollectionViewLayout"},"Classes/IGListCollectionView.html#/c:objc(cs)IGListCollectionView(im)initWithFrame:listCollectionViewLayout:":{"name":"-initWithFrame:listCollectionViewLayout:","abstract":"<p>Create a new view with an <code>IGListcollectionViewLayout</code> class or subclass.</p>","parent_name":"IGListCollectionView"},"Classes/IGListBindingSectionController.html#/c:objc(cs)IGListBindingSectionController(py)dataSource":{"name":"dataSource","abstract":"<p>A data source that transforms a top-level object into view models, and returns cells and sizes for given view models.</p>","parent_name":"IGListBindingSectionController"},"Classes/IGListBindingSectionController.html#/c:objc(cs)IGListBindingSectionController(py)selectionDelegate":{"name":"selectionDelegate","abstract":"<p>A delegate that receives selection events from cells in an <code>IGListBindingSectionController</code> instance.</p>","parent_name":"IGListBindingSectionController"},"Classes/IGListBindingSectionController.html#/c:objc(cs)IGListBindingSectionController(py)object":{"name":"object","abstract":"<p>The object currently assigned to the section controller, if any.</p>","parent_name":"IGListBindingSectionController"},"Classes/IGListBindingSectionController.html#/c:objc(cs)IGListBindingSectionController(py)viewModels":{"name":"viewModels","abstract":"<p>The array of view models created from the data source. Values are changed when the top-level object changes or by","parent_name":"IGListBindingSectionController"},"Classes/IGListBindingSectionController.html#/c:objc(cs)IGListBindingSectionController(im)updateAnimated:completion:":{"name":"-updateAnimated:completion:","abstract":"<p>Tells the section controller to query for new view models, diff the changes, and update its cells.</p>","parent_name":"IGListBindingSectionController"},"Classes/IGListBatchUpdateData.html#/c:objc(cs)IGListBatchUpdateData(py)insertSections":{"name":"insertSections","abstract":"<p>Section insert indexes.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGListBatchUpdateData.html#/c:objc(cs)IGListBatchUpdateData(py)deleteSections":{"name":"deleteSections","abstract":"<p>Section delete indexes.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGListBatchUpdateData.html#/c:objc(cs)IGListBatchUpdateData(py)moveSections":{"name":"moveSections","abstract":"<p>Section moves.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGListBatchUpdateData.html#/c:objc(cs)IGListBatchUpdateData(py)insertIndexPaths":{"name":"insertIndexPaths","abstract":"<p>Item insert index paths.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGListBatchUpdateData.html#/c:objc(cs)IGListBatchUpdateData(py)deleteIndexPaths":{"name":"deleteIndexPaths","abstract":"<p>Item delete index paths.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGListBatchUpdateData.html#/c:objc(cs)IGListBatchUpdateData(py)moveIndexPaths":{"name":"moveIndexPaths","abstract":"<p>Item moves.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGListBatchUpdateData.html#/c:objc(cs)IGListBatchUpdateData(im)initWithInsertSections:deleteSections:moveSections:insertIndexPaths:deleteIndexPaths:moveIndexPaths:":{"name":"-initWithInsertSections:deleteSections:moveSections:insertIndexPaths:deleteIndexPaths:moveIndexPaths:","abstract":"<p>Creates a new batch update object with section and item operations.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGListAdapterUpdater.html#/c:objc(cs)IGListAdapterUpdater(py)delegate":{"name":"delegate","abstract":"<p>The delegate that receives events with data on the performance of a transition.</p>","parent_name":"IGListAdapterUpdater"},"Classes/IGListAdapterUpdater.html#/c:objc(cs)IGListAdapterUpdater(py)movesAsDeletesInserts":{"name":"movesAsDeletesInserts","abstract":"<p>A flag indicating if a move should be treated as a <q>delete, then insert</q> operation.</p>","parent_name":"IGListAdapterUpdater"},"Classes/IGListAdapterUpdater.html#/c:objc(cs)IGListAdapterUpdater(py)allowsBackgroundReloading":{"name":"allowsBackgroundReloading","abstract":"<p>A flag indicating whether this updater should skip diffing and simply call","parent_name":"IGListAdapterUpdater"},"Classes/IGListAdapterUpdater.html#/c:objc(cs)IGListAdapterUpdater(py)coalescanceTime":{"name":"coalescanceTime","abstract":"<p>Time, in seconds, to wait and coalesce batch updates. Default is 0.</p>","parent_name":"IGListAdapterUpdater"},"Classes/IGListAdapterUpdater.html#/c:objc(cs)IGListAdapterUpdater(py)experiments":{"name":"experiments","abstract":"<p>A bitmask of experiments to conduct on the updater.</p>","parent_name":"IGListAdapterUpdater"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(py)viewController":{"name":"viewController","abstract":"<p>The view controller that houses the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(py)collectionView":{"name":"collectionView","abstract":"<p>The collection view used with the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(py)dataSource":{"name":"dataSource","abstract":"<p>The object that acts as the data source for the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(py)delegate":{"name":"delegate","abstract":"<p>The object that receives top-level events for section controllers.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(py)collectionViewDelegate":{"name":"collectionViewDelegate","abstract":"<p>The object that receives <code>UICollectionViewDelegate</code> events.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(py)scrollViewDelegate":{"name":"scrollViewDelegate","abstract":"<p>The object that receives <code>UIScrollViewDelegate</code> events.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(py)moveDelegate":{"name":"moveDelegate","abstract":"<p>The object that receives <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IGListAdapterMoveDelegate.html\">IGListAdapterMoveDelegate</a></code> events resulting from interactive reordering of sections.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(py)updater":{"name":"updater","abstract":"<p>The updater for the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(py)experiments":{"name":"experiments","abstract":"<p>A bitmask of experiments to conduct on the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)initWithUpdater:viewController:workingRangeSize:":{"name":"-initWithUpdater:viewController:workingRangeSize:","abstract":"<p>Initializes a new <code>IGListAdapter</code> object.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)initWithUpdater:viewController:":{"name":"-initWithUpdater:viewController:","abstract":"<p>Initializes a new <code>IGListAdapter</code> object with a working range of <code>0</code>.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)performUpdatesAnimated:completion:":{"name":"-performUpdatesAnimated:completion:","abstract":"<p>Perform an update from the previous state of the data source. This is analogous to calling","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)reloadDataWithCompletion:":{"name":"-reloadDataWithCompletion:","abstract":"<p>Perform an immediate reload of the data in the data source, discarding the old objects.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)reloadObjects:":{"name":"-reloadObjects:","abstract":"<p>Reload the list for only the specified objects.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)sectionControllerForSection:":{"name":"-sectionControllerForSection:","abstract":"<p>Query the section controller at a given section index. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)sectionForSectionController:":{"name":"-sectionForSectionController:","abstract":"<p>Query the section index of a list. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)sectionControllerForObject:":{"name":"-sectionControllerForObject:","abstract":"<p>Returns the section controller for the specified object. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)objectForSectionController:":{"name":"-objectForSectionController:","abstract":"<p>Returns the object corresponding to the specified section controller in the list. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)objectAtSection:":{"name":"-objectAtSection:","abstract":"<p>Returns the object corresponding to a section in the list. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)sectionForObject:":{"name":"-sectionForObject:","abstract":"<p>Returns the section corresponding to the specified object in the list. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)objects":{"name":"-objects","abstract":"<p>Returns a copy of all the objects currently driving the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)visibleSectionControllers":{"name":"-visibleSectionControllers","abstract":"<p>An unordered array of the currently visible section controllers.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)visibleObjects":{"name":"-visibleObjects","abstract":"<p>An unordered array of the currently visible objects.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)visibleCellsForObject:":{"name":"-visibleCellsForObject:","abstract":"<p>An unordered array of the currently visible cells for a given object.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)scrollToObject:supplementaryKinds:scrollDirection:scrollPosition:animated:":{"name":"-scrollToObject:supplementaryKinds:scrollDirection:scrollPosition:animated:","abstract":"<p>Scrolls to the specified object in the list adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)sizeForItemAtIndexPath:":{"name":"-sizeForItemAtIndexPath:","abstract":"<p>Returns the size of a cell at the specified index path.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)sizeForSupplementaryViewOfKind:atIndexPath:":{"name":"-sizeForSupplementaryViewOfKind:atIndexPath:","abstract":"<p>Returns the size of a supplementary view in the list at the specified index path.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)addUpdateListener:":{"name":"-addUpdateListener:","abstract":"<p>Adds a listener to the list adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html#/c:objc(cs)IGListAdapter(im)removeUpdateListener:":{"name":"-removeUpdateListener:","abstract":"<p>Removes a listener from the list adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGListAdapter.html":{"name":"IGListAdapter","abstract":"<p><code>IGListAdapter</code> objects provide an abstraction for feeds of objects in a <code>UICollectionView</code> by breaking each object"},"Classes/IGListAdapterUpdater.html":{"name":"IGListAdapterUpdater","abstract":"<p>An <code>IGListAdapterUpdater</code> is a concrete type that conforms to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IGListUpdatingDelegate.html\">IGListUpdatingDelegate</a></code>."},"Classes/IGListBatchUpdateData.html":{"name":"IGListBatchUpdateData","abstract":"<p>An instance of <code>IGListBatchUpdateData</code> takes section indexes and item index paths"},"Classes/IGListBindingSectionController.html":{"name":"IGListBindingSectionController","abstract":"<p>This section controller uses a data source to transform its <q>top level</q> object into an array of diffable view models."},"Classes/IGListCollectionView.html":{"name":"IGListCollectionView","abstract":"<p>This <code>UICollectionView</code> subclass allows for partial layout invalidation using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGListCollectionViewLayout.html\">IGListCollectionViewLayout</a></code>.</p>"},"Classes/IGListCollectionViewLayout.html":{"name":"IGListCollectionViewLayout","abstract":"<p>This UICollectionViewLayout subclass is for vertically or horizontally scrolling lists of data with variable widths and"},"Classes/IGListGenericSectionController.html":{"name":"IGListGenericSectionController","abstract":"<p>This class adds a helper layer to <code>IGListSectionController\u0010</code> to automatically store a generic object in"},"Classes/IGListIndexPathResult.html":{"name":"IGListIndexPathResult","abstract":"<p>A result object returned when diffing with sections.</p>"},"Classes/IGListIndexSetResult.html":{"name":"IGListIndexSetResult","abstract":"<p>A result object returned when diffing with indexes.</p>"},"Classes/IGListMoveIndex.html":{"name":"IGListMoveIndex","abstract":"<p>An object representing a move between indexes.</p>"},"Classes/IGListMoveIndexPath.html":{"name":"IGListMoveIndexPath","abstract":"<p>An object representing a move between indexes.</p>"},"Classes.html#/c:objc(cs)IGListReloadDataUpdater":{"name":"IGListReloadDataUpdater","abstract":"<p>An <code>IGListReloadDataUpdater</code> is a concrete type that conforms to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IGListUpdatingDelegate.html\">IGListUpdatingDelegate</a></code>."},"Classes/IGListSectionController.html":{"name":"IGListSectionController","abstract":"<p>The base class for section controllers used in a list. This class is intended to be subclassed.</p>"},"Classes/IGListSingleSectionController.html":{"name":"IGListSingleSectionController","abstract":"<p>This section controller is meant to make building simple, single-cell lists easier. By providing the type of cell, a block"},"Classes/IGListStackedSectionController.html":{"name":"IGListStackedSectionController","abstract":"<p>An instance of <code>IGListStackedSectionController</code> is a clustered section controller, composed of many child section"},"iglistdiffable-and-equality.html":{"name":"IGListDiffable and Equality"},"migration.html":{"name":"Migration"},"working-with-uicollectionview.html":{"name":"Working with UICollectionView"},"working-with-core-data.html":{"name":"Working with Core Data"},"getting-started.html":{"name":"Getting Started"},"generating-your-models.html":{"name":"Generating your models"},"vision.html":{"name":"VISION"},"best-practices-and-faq.html":{"name":"Best Practices and FAQ"},"installation.html":{"name":"Installation"},"modeling-and-binding.html":{"name":"Modeling and Binding"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}